name: Build the web version of the RustDesk

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      upload-artifact:
        type: boolean
        default: true
      upload-tag:
        type: string
        default: "nightly-web"

env:
  CARGO_NDK_VERSION: "3.1.2"
  LLVM_VERSION: "15.0.6"
  FLUTTER_VERSION: "3.13.9"
  FLUTTER_RUST_BRIDGE_VERSION: "1.80.1"
  # for arm64 linux because official Dart SDK does not work
  FLUTTER_ELINUX_VERSION: "3.13.9"
  FLUTTER_ELINUX_COMMIT_ID: "f4d4205893c16b0aa9cb6ba46b9f32b639d3b057"
  TAG_NAME: "${{ inputs.upload-tag }}"
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  # vcpkg version: 2023.10.19
  # for multiarch gcc compatibility
  VCPKG_COMMIT_ID: "8eb57355a4ffb410a2e94c07b4dca2dffbee8e50"
  VERSION: "1.2.4"
  NDK_VERSION: "r26b"
  #signing keys env variable checks
  ANDROID_SIGNING_KEY: '${{ secrets.ANDROID_SIGNING_KEY }}'
  MACOS_P12_BASE64: '${{ secrets.MACOS_P12_BASE64 }}'
  # To make a custom build with your own servers set the below secret values
  RS_PUB_KEY: '${{ secrets.RS_PUB_KEY }}'
  RENDEZVOUS_SERVER: '${{ secrets.RENDEZVOUS_SERVER }}'
  API_SERVER: '${{ secrets.API_SERVER }}'
  UPLOAD_ARTIFACT: "${{ inputs.upload-artifact }}"

jobs:
  build-rustdesk-web:
    name: build rustdesk web
    runs-on: ubuntu-20.04
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     job:
    #       - {
    #           arch: x86_64,
    #           target: x86_64-unknown-linux-gnu,
    #           os: ubuntu-20.04,
    #           extra-build-features: "",
    #         }
    steps:
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
              curl \
              git \
              wget \
              unzip \
              libgconf-2-4 \
              gdb \
              libstdc++6 \
              libglu1-mesa \
              fonts-droid-fallback \
              lib32stdc++6 \
              python3 \
              clang \
              cmake \
              ninja-build \
              pkg-config \
              libgtk-3-dev \
              libgstreamer1.0-dev \
              libgstreamer-plugins-base1.0-dev \
              libgstreamer-plugins-bad1.0-dev \
              gstreamer1.0-plugins-base \
              gstreamer1.0-plugins-good \
              gstreamer1.0-plugins-bad \
              gstreamer1.0-plugins-ugly \
              gstreamer1.0-libav \
              gstreamer1.0-tools \
              gstreamer1.0-x \
              gstreamer1.0-alsa \
              gstreamer1.0-gl \
              gstreamer1.0-gtk3 \
              gstreamer1.0-qt5 \
              gstreamer1.0-pulseaudio \
              libopus-dev

      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Before build
        run: |
          cd flutter/web/js
          yarn
          yarn pre-build
          yarn build
          cd ..
          wget https://github.com/rustdesk/doc.rustdesk.com/releases/download/console/web_deps.tar.gz
          tar -xzvf web_deps.tar.gz

      - name: Install flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "master"
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: flutter config
        run: |
          cd flutter
          flutter upgrade || true
          flutter pub get
          flutter config --enable-web
          # TODO 兼容性问题

      - name: Build rustdesk
        run: |
          pwd
          cd flutter
          flutter build web --release
          # 删除不必要的文件
          # 删除flutter/build/web/js目录下除了dist外的所有文件
          rm -rf build/web/js/!(dist)
          rm -rf build/web/web_deps.tar.gz

          tar -czvf rustdesk-web-${{ env.VERSION }}.tar.gz build/web

      - name: Publish package
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          tag_name: ${{ env.TAG_NAME }}
          files: |
            flutter/*.tar.gz
